Graphs :
1. Keep an eye for directed/non-directed graphs.
2. Don't take for granted the edge direction, not necessary if 1 -> 2 , 2 is root.

Sorting :
1. Java uses Double Pivoted Quick sort which is O(N**2) in worst case, so randomly shuffle the
array to avoid timeouts.

Misc :
0. Read problem again before submitting
1. Many a time Greedy algorithm works so don't try to always use DP.
2. If main loop is running from 2 -> n then don't forget to take care of cases where input
is < 2
3. Arrays.sort on Objects uses merge sort which has a wost case of O(n*log(n)).
Arrays.sort on primitives uses quicksort which has a worst case of O(n^2) This
happens if you build the array in a certain manner otherwise quicksort on
average is also O(n*log(n)).
4. Major errors happen when you copy paste! Either don't copy paste, or look at the code
carefully!
5. When you're checking for specific condition in the start of loop, and then altering the same
thing in consequent lines, then the condition which you checked in the start might not hold. So always
check the initial condition in the beginning and then put the required condition in the end of the loop.
6. Maintain partial sum for range queries. for range i, k (inclusive) ans = sum[k] - sum[i - 1]. Remember to add
mod and then mod, because sum[k] - sum[i - 1] can be negative
7. Look for Presentation Errors, a.k.a. is newline in the end?